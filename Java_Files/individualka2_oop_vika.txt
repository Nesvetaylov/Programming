import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);

        System.out.println("Введем Rectangle (прямоугольник)");
        System.out.println("задайте сторону a");
        int a=sc.nextInt();
        System.out.println("задайте сторону b");
        int b=sc.nextInt();
        Figure rectangle = new Rectangle(a, b);

        double rectanglePerimeter = rectangle.calculatePerimeter();
        double rectangleArea = rectangle.calculateArea();

        System.out.println("Периметр и площадь прямоугольника:");
        System.out.println("Периметр: " + rectanglePerimeter);
        System.out.println("Площадь: " + rectangleArea);

        System.out.println("//////////---//////////");

        System.out.println("Введем Сircle (круг)");
        System.out.println("задайте радиус");
        int r=sc.nextInt();

        Figure circle = new Circle(r);

        double circlePerimeter = circle.calculatePerimeter();
        double circleArea = circle.calculateArea();

        System.out.println("Периметр и площадь круга:");
        System.out.println("Периметр: " + circlePerimeter);
        System.out.println("Площадь: " + circleArea);


        System.out.println("//////////---//////////");


        System.out.println("Введем Trapezium (трапеция)");
        System.out.println("задайте сторону a");
        int a1=sc.nextInt();
        System.out.println("задайте сторону b");
        int b1=sc.nextInt();
        System.out.println("задайте высоту");
        int h=sc.nextInt();

        Figure trapezium = new Trapezium(a1, b1, h);

        double trapeziumPerimeter = trapezium.calculatePerimeter();
        double trapeziumArea = trapezium.calculateArea();

        System.out.println("Периметр и площадь трапеции:");
        System.out.println("Периметр: " + trapeziumPerimeter);
        System.out.println("Площадь: " + trapeziumArea);
    }
}


public interface Figure {
    double calculatePerimeter();
    double calculateArea();
}


public class Circle implements Figure{
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    public double calculatePerimeter() {
        return 2 * Math.PI * radius;
    }

    @Override
    public double calculateArea() {
        return Math.PI * radius * radius;
    }
}


public class Rectangle implements Figure{

    private double length;
    private double width;

    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }

    @Override
    public double calculatePerimeter() {
        return 2 * (length + width);
    }

    @Override
    public double calculateArea() {
        return length * width;
    }
}


public class Trapezium implements Figure{
    private double base1;
    private double base2;
    private double height;

    public Trapezium(double base1, double base2, double height) {
        this.base1 = base1;
        this.base2 = base2;
        this.height = height;
    }

    @Override
    public double calculatePerimeter() {
        return base1 + base2 + 2 * Math.sqrt(Math.pow((base2 - base1) / 2, 2) + height * height);
    }

    @Override
    public double calculateArea() {
        return (base1 + base2) * height / 2;
    }
}
